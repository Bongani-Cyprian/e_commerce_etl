# .github/workflows/ci-cd.yml

name: CI/CD for Airflow ETL

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - staging
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dump workspace for debugging
        run: |
          pwd
          ls -R .

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 apache-airflow pandas google-cloud-bigquery
          # adjust path if requirements.txt lives elsewhere
          pip install -r requirements.txt

      - name: Run flake8
        run: flake8 airflow/dags --max-line-length=88

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dump workspace for debugging
        run: |
          pwd
          ls -R .

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          # adjust path if requirements.txt lives elsewhere
          pip install -r requirements.txt

      - name: Run pytest
        run: python -m pytest tests

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t my-etl-image .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Push image to Container Registry
        run: |
          docker tag my-etl-image gcr.io/$GCP_PROJECT_ID/my-etl-image:latest
          docker push gcr.io/$GCP_PROJECT_ID/my-etl-image:latest
      # Add your deployment commands here
